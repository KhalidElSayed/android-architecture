/**
* Shared file between builds so that they can all use the same dependencies and
* maven repositories.
**/
ext.deps = [:]

def versions = [:]
versions.android_gradle_plugin = '4.2.2'
versions.firebase_gradle_plugin = '4.2.0'
versions.support = "1.0.0"
versions.app_compat = "1.4.1"
versions.annotation = "1.3.0"
versions.multidex = "2.0.1"
versions.constraint_layout = "2.1.3"
versions.fragment = "1.4.1"
versions.arch_core = "2.1.0"
versions.room = "2.4.2"
versions.lifecycle = "2.4.1"
versions.lifecycle_extensions = "2.2.0"
versions.work = "2.7.1"
versions.navigation = "2.4.2"
versions.paging = "3.1.1"
versions.kotlin = "1.6.20"
versions.core_ktx = "1.7.0"
versions.dagger = "2.41"
versions.rxjava2 = "2.2.21"
versions.rxandroid = "2.1.1"
versions.rxbinding = "2.2.0"
versions.retrofit = "2.9.0"
versions.okhttp_logging_interceptor = "4.9.3" // "3.14.2" // the newer one is 4.9.3
versions.glide = "4.9.0"
versions.butterknife = "10.2.3"
versions.stream_java8 = "1.2.2"
versions.gson = "2.9.0"
versions.guava = "31.1-jre"
versions.tray = "0.12.0"
versions.rxlocation = "0.11.0-beta"
versions.sqlbrite = "2.0.0"
versions.typefacehelper = "0.9.0"
versions.material_dialogs = "0.9.4.5"
versions.roundedImage = "2.3.0"
versions.kprogresshud = "1.2.0"
versions.alerter = "7.0.1"
versions.timber = "5.0.1"
versions.firebase = "17.0.0"
versions.dexmaker = "2.28.1"
versions.apache_commons = "2.5"
versions.atsl_rules = "1.1.1"
versions.atsl_runner = "1.4.0"
versions.atsl_junit = "1.1.3-rc01"
versions.hamcrest = "1.3"
versions.espresso = "3.4.0"
versions.junit = "4.13.2"
versions.robolectric = "4.2"
versions.mockito = "2.28.2"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.28.2"
versions.mockwebserver = "3.8.1"

def deps = [:]

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.annotation"
support.app_compat = "androidx.appcompat:appcompat:$versions.app_compat"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.multidex = "com.android.support:multidex:$versions.multidex"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_runtime = "androidx.fragment:fragment:${versions.fragment}"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle_extensions"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.reactivestreams = "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
espresso.accessibility = "androidx.test.espresso:espresso-accessibility:$versions.espresso"
espresso.web = "androidx.test.espresso:espresso-web:$versions.espresso"
espresso.idling_resource = "androidx.test.espresso:espresso-idling-resource:$versions.espresso"
espresso.idling_concurrent = "androidx.test.espresso.idling:idling-concurrent:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.inline = "org.mockito:mockito-inline:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def butterknife = [:]
butterknife.runtime = "com.jakewharton:butterknife:$versions.butterknife"
butterknife.compiler = "com.jakewharton:butterknife-compiler:$versions.butterknife"
deps.butterknife = butterknife

def firebase = [:]
firebase.core = "com.google.firebase:firebase-core:$versions.firebase"
deps.firebase = firebase

deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rxandroid = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
deps.rxbinding = "com.jakewharton.rxbinding2:rxbinding:$versions.rxbinding"
deps.sqlbrite = "com.squareup.sqlbrite2:sqlbrite:$versions.sqlbrite"
deps.rxlocation = "net.kjulio.RxLocation:rxlocation:$versions.rxlocation"
deps.stream_java8 = "com.annimon:stream:$versions.stream_java8"
deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.guava = "com.google.guava:guava:$versions.guava"
deps.tray = "net.grandcentrix.tray:tray:$versions.tray"
deps.roundedimageview = "com.makeramen:roundedimageview:$versions.roundedImage"
deps.typefacehelper = "com.norbsoft.typefacehelper:library:$versions.typefacehelper"
deps.material_dialogs = "com.afollestad.material-dialogs:core:$versions.material_dialogs"
deps.kprogresshud = "com.kaopiz:kprogresshud:$versions.kprogresshud"
deps.alerter = "com.tapadoo.android:alerter:$versions.alerter"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.crashlytics = "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"
deps.junit = "junit:junit:$versions.junit"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.firebase_gradle_plugin = "com.google.gms:google-services:$versions.firebase_gradle_plugin"

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 31
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url "https://jitpack.io" }
    handler.maven { url  "https://dl.bintray.com/jtribe/maven" }
    handler.maven { url 'https://maven.fabric.io/public' }
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url "https://kotlin.bintray.com/kotlinx/" } // For kotlinx-metadata-jvm used by Room 2.1.0 (KT-27991)
}
ext.addRepos = this.&addRepos
